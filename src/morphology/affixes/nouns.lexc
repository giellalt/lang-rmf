!! Noun inflection
!  ---------------
!! The FINNISH KALO ROMANI language nouns inflect in cases.

LEXICON N_BAR
 NUMBER ;

LEXICON NUMBER
+Sg: SINGULAR ;
+Pl: PLURAL ;

LEXICON SINGULAR
        +Nom:0  ENDLEX;
        +Obl:es ENDLEX;
        +Gen:esko       ENDLEX;         !! Actually, the secondary cases are formed by adding the case ending
        +Dat:eske       ENDLEX;         !! to the oblique ending (for instance +N+Sg+Obl+Abl), but for simplicity's 
        +Abl:esta       ENDLEX;         !! sake I'm doing this in a grammatically unsustainable way. 
        +Ins:eha        ENDLEX;         !! 
        +GenL:eskiir    GenNumEnding;


LEXICON PLURAL
        +Nom:e  ENDLEX;
        +Obl:en ENDLEX;
        +Gen:engo       ENDLEX;
        +Dat:enge       ENDLEX;
        +Abl:enna       ENDLEX;
        +Ins:ensa       ENDLEX;
        +GenL:enkiir    GenNumEnding;
        
LEXICON GenNumEnding            !! Long genitive ending is followed by the gender and/or number marking as well as a case ending.
        +Msc+Sg:o ENDLEX;                 !! These are now nominative forms (barokiiro and barokiiri), but the long genitive word forms can be inflected 
        +Fem+Sg:i ENDLEX;                 !! in other cases as well, for instance +N+Sg+Obl+GenL+Msc+Sg+Obl+Abl (bareskiiresta). In other words, they could
        +Pl:e   ENDLEX;                 !! be entered back into the paradigm, but I don't know how to do this without creating a neverending loop.

LEXICON ENDLEX
 # ;


!!
LEXICON Singular_0_es
        +Nom:0  ENDLEX;
        +Obl:es ENDLEX;
            :es OBL-CASE ;

LEXICON Plural_e-en
        +Nom:e  ENDLEX;
        +Obl:en ENDLEX;
        :en     OBL-CASE;

LEXICON OBL-CASE
        
        +Gen:ko ENDLEX;
        +Dat:ke ENDLEX;
        +Abl:ta ENDLEX;
        +Ins:eha        ENDLEX;
        +GenL:kiir      GenNumEnding;
        +Gen:engo       ENDLEX;
        +Dat:enge       ENDLEX;
        +Abl:enna       ENDLEX;
        +Ins:ensa       ENDLEX;
        +GenL:enkiir    GenNumEnding;



LEXICON Cases
+N+sg+nom:0     #   ;
+N+pl+nom:i     #   ;
+N+sg+loc:as    #   ;
+N+pl+loc:ias   #   ;
+N+sg+acc:at    #   ;
+N+pl+acc:iat   #   ;
#:0   Nouns   ;

! vim: set ft=xfst-lexc:

